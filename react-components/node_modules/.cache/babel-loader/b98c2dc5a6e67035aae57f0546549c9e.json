{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/first-react-app/react-components/src/components/FeedbackStats.js\";\nimport React from 'react';\n\nfunction FeedbackStats({\n  feedback\n}) {\n  let average = feedback.reduce((acc, cur) => {\n    return acc + cur.rating;\n  }, 0) / feedback.length;\n  average = average.toFixed(1).replace(/[.,]0$/, '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [feedback.length, \" Review\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [isNaN(average) ? 0 : average, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FeedbackStats;\nexport default FeedbackStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackStats\");","map":{"version":3,"sources":["/workspace/first-react-app/react-components/src/components/FeedbackStats.js"],"names":["React","FeedbackStats","feedback","average","reduce","acc","cur","rating","length","toFixed","replace","isNaN"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAmC;AAE/B,MAAIC,OAAO,GAAGD,QAAQ,CAACE,MAAT,CAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxC,WAAOD,GAAG,GAAGC,GAAG,CAACC,MAAjB;AACH,GAFa,EAEZ,CAFY,IAEPL,QAAQ,CAACM,MAFhB;AAIAL,EAAAA,OAAO,GAAGA,OAAO,CAACM,OAAR,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,QAA3B,EAAoC,EAApC,CAAV;AAEF,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACA;AAAA,iBAAKR,QAAQ,CAACM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,iBAAKG,KAAK,CAACR,OAAD,CAAL,GAAiB,CAAjB,GAAqBA,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAfQF,a;AAiBT,eAAeA,aAAf","sourcesContent":["import React from 'react'\n\n\n\nfunction FeedbackStats({feedback}) {\n\n    let average = feedback.reduce((acc, cur) => {\n        return acc + cur.rating\n    },0) / feedback.length\n\n    average = average.toFixed(1).replace(/[.,]0$/,'')\n\n  return (\n    <div className='feedback-stats'>\n    <h2>{feedback.length} Review</h2>\n    <h4>{isNaN(average) ? 0 : average } </h4>\n\n    </div>\n  )\n}\n\nexport default FeedbackStats\n"]},"metadata":{},"sourceType":"module"}